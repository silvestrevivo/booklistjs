{"version":3,"sources":["index.js"],"names":["Book","title","author","isbn","UI","Store","getBooks","forEach","book","addBookToList","list","document","querySelector","row","createElement","innerHTML","appendChild","value","message","className","div","createTextNode","container","form","insertBefore","setTimeout","remove","el","classList","contains","parentElement","books","localStorage","getItem","JSON","parse","push","setItem","stringify","index","splice","addEventListener","displayBooks","event","preventDefault","showAlert","addBook","clearFields","deleteBook","target","removeBook","previousElementSibling","textContent"],"mappings":";AA6HA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCA5HMA,IAAAA,EACJ,SAAYC,EAAAA,EAAOC,EAAQC,GAAM,EAAA,KAAA,GAC1BF,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACTC,KAAAA,KAAOA,GAKVC,EAmHN,WAAA,SAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,eAhHwB,MAAA,WAENC,EAAMC,WAEdC,QAAQ,SAACC,GACbJ,EAAGK,cAAcD,OA2GvB,CAAA,IAAA,gBAvGuBA,MAAAA,SAAAA,GACbE,IAAAA,EAAOC,SAASC,cAAc,cAC9BC,EAAMF,SAASG,cAAc,MACnCD,EAAIE,UACIP,eAAAA,OAAAA,EAAKP,MACLO,qBAAAA,OAAAA,EAAKN,OACLM,qBAAAA,OAAAA,EAAKL,KAHb,sFAMAO,EAAKM,YAAYH,KA8FrB,CAAA,IAAA,cA3FuB,MAAA,WACnBF,SAASC,cAAc,UAAUK,MAAQ,GACzCN,SAASC,cAAc,WAAWK,MAAQ,GAC1CN,SAASC,cAAc,SAASK,MAAQ,KAwF5C,CAAA,IAAA,YArFmBC,MAAAA,SAAAA,EAASC,GAClBC,IAAAA,EAAMT,SAASG,cAAc,OACnCM,EAAID,UAA2BA,eAAAA,OAAAA,GAC/BC,EAAIJ,YAAYL,SAASU,eAAeH,IAElCI,IAAAA,EAAYX,SAASC,cAAc,cACnCW,EAAOZ,SAASC,cAAc,cACpCU,EAAUE,aAAaJ,EAAKG,GAE5BE,WAAW,WACTd,SAASC,cAAc,UAAUc,UAChC,QA0EP,CAAA,IAAA,aAvEoBC,MAAAA,SAAAA,GACZA,EAAGC,UAAUC,SAAS,WACxBF,EAAGG,cAAcA,cAAcJ,aAqErC,EAAA,GA/DMrB,EA+DN,WAAA,SAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA9DoB,MAAA,WAQT0B,OAN+B,OAAlCC,aAAaC,QAAQ,SACf,GAEAC,KAAKC,MAAMH,aAAaC,QAAQ,YAyD9C,CAAA,IAAA,UAnDiBzB,MAAAA,SAAAA,GACPuB,IAAAA,EAAQ1B,EAAMC,WACpByB,EAAMK,KAAK5B,GACXwB,aAAaK,QAAQ,QAASH,KAAKI,UAAUP,MAgDjD,CAAA,IAAA,aA7CoB5B,MAAAA,SAAAA,GACV4B,IAAAA,EAAQ1B,EAAMC,WACpByB,EAAMxB,QAAQ,SAACC,EAAM+B,GACf/B,EAAKL,OAASA,GAChB4B,EAAMS,OAAOD,EAAO,KAIxBP,aAAaK,QAAQ,QAASH,KAAKI,UAAUP,QAqCjD,EAAA,GAhCApB,SAAS8B,iBAAiB,mBAAoBrC,EAAGsC,cAGjD/B,SAASC,cAAc,cAAc6B,iBAAiB,SAAU,SAAAE,GAC9DA,EAAMC,iBAEA3C,IAAAA,EAAQU,SAASC,cAAc,UAAUK,MACzCf,EAASS,SAASC,cAAc,WAAWK,MAC3Cd,EAAOQ,SAASC,cAAc,SAASK,MAGzChB,GAAU,KAAVA,GAA2B,KAAXC,GAA0B,KAATC,EACnCC,EAAGyC,UAAU,iCAAkC,cAC1C,CAECrC,IAAAA,EAAO,IAAIR,EAAKC,EAAOC,EAAQC,GAGrCC,EAAGK,cAAcD,GAGjBH,EAAMyC,QAAQtC,GAGdJ,EAAGyC,UAAU,aAAc,WAG3BzC,EAAG2C,iBAKPpC,SAASC,cAAc,cAAc6B,iBAAiB,QAAS,SAAAE,GAE7DvC,EAAG4C,WAAWL,EAAMM,QAGpB5C,EAAM6C,WAAWP,EAAMM,OAAOnB,cAAcqB,uBAAuBC,aAGnEhD,EAAGyC,UAAU,eAAgB","file":"booklistjs.51af16d7.map","sourceRoot":"..","sourcesContent":["// * Book Class: Represents a Book\nclass Book {\n  constructor(title, author, isbn) {\n    this.title = title;\n    this.author = author;\n    this.isbn = isbn;\n  }\n}\n\n// * UI Class: Handle UI Tasks\nclass UI {\n  // static funcions, why? This class contains the UI tasks and it will be not\n  // extended, thus its functions have to be 'isolated'\n  static displayBooks() {\n    // books stored in LocalStore\n    const books = Store.getBooks();\n    // As a map() in React...\n    books.forEach((book) => {\n      UI.addBookToList(book);\n    })\n  }\n\n  static addBookToList(book) {\n    const list = document.querySelector('#book-list');\n    const row = document.createElement('tr');\n    row.innerHTML = `\n      <td>${book.title}</td>\n      <td>${book.author}</td>\n      <td>${book.isbn}</td>\n      <td><a href=\"#\" class=\"btn btn-danger btn-sm delete\">X</a></td>\n    `;\n    list.appendChild(row);\n  }\n\n  static clearFields() {\n    document.querySelector('#title').value = '';\n    document.querySelector('#author').value = '';\n    document.querySelector('#isbn').value = '';\n  }\n\n  static showAlert(message, className) {\n    const div = document.createElement('div');\n    div.className = `alert alert-${className}`;\n    div.appendChild(document.createTextNode(message));\n\n    const container = document.querySelector('.container');\n    const form = document.querySelector('#form-book');\n    container.insertBefore(div, form);\n    // Vanish in 3 seconds\n    setTimeout(() => {\n      document.querySelector('.alert').remove()\n    }, 2500)\n  }\n\n  static deleteBook(el) {\n    if (el.classList.contains('delete')) {\n      el.parentElement.parentElement.remove()\n    }\n  }\n}\n\n// * Store Class: Handles Storage\nclass Store {\n  static getBooks() {\n    let books;\n    if (localStorage.getItem('books') === null) {\n      books = []\n    } else {\n      books = JSON.parse(localStorage.getItem('books'))\n    }\n\n    return books;\n  }\n\n  static addBook(book) {\n    const books = Store.getBooks();\n    books.push(book)\n    localStorage.setItem('books', JSON.stringify(books));\n  }\n\n  static removeBook(isbn) {\n    const books = Store.getBooks();\n    books.forEach((book, index) => {\n      if (book.isbn === isbn) {\n        books.splice(index, 1);\n      }\n    });\n\n    localStorage.setItem('books', JSON.stringify(books));\n  }\n}\n\n// * Event: Display Books\ndocument.addEventListener('DOMContentLoaded', UI.displayBooks)\n\n// * Event: Add a Book\ndocument.querySelector('#form-book').addEventListener('submit', event => {\n  event.preventDefault()\n  // Get from values\n  const title = document.querySelector('#title').value;\n  const author = document.querySelector('#author').value;\n  const isbn = document.querySelector('#isbn').value;\n\n  // Validation\n  if (title === '' || author === '' || isbn === '') {\n    UI.showAlert('Please, fill in all the fields', 'danger')\n  } else {\n    // Instatiate book\n    const book = new Book(title, author, isbn);\n\n    // Add book to UI\n    UI.addBookToList(book);\n\n    // Add book to store\n    Store.addBook(book);\n\n    // Success Message\n    UI.showAlert('Book Added', 'success')\n\n    // Clear Flieds on UI\n    UI.clearFields()\n  }\n})\n\n// * Event: Remove a book\ndocument.querySelector('#book-list').addEventListener('click', event => {\n  // Remove book from UI\n  UI.deleteBook(event.target);\n\n  // Remove book from store\n  Store.removeBook(event.target.parentElement.previousElementSibling.textContent);\n\n  // Success Message\n  UI.showAlert('Book Removed', 'success')\n})\n"]}